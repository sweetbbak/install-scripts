theme = "ferra"
# theme = "rose_pine_moon"
# theme = "monokai_pro"
# theme = "gruvbox_original_dark_medium"

# General Helix's configuration
[editor]
line-number = "relative"
cursorline = true
color-modes = true

# File explorer configuration
[editor.file-picker]
hidden = false
parents = false

[editor.whitespace]
render = "none"

[editor.indent-guides]
render = true
character = "│" # Some characters that work well: "▏", "┆", "┊", "⸽", "│" 
skip-levels = 0

# Helix's statusline
[editor.statusline]
left = ["mode", "spinner"]
center = ["file-name", "diagnostics"]
right = ["selections", "file-encoding", "file-type", "position", "position-percentage"]
separator = "│"
# separator = ""
mode.normal = "NORMAL  "
mode.insert = "INSERT  "
mode.select = "SELECT 麗"

[keys.normal]
esc = ["collapse_selection", "keep_primary_selection"]
"C-r" = [":config-reload"]
"C-s" = [":w"]
"C-e" = ["save_selection"]
"C-o" = [":open ~/.config/helix/config.toml"]
"C-i" = [":insert-output echo -e 'if err != nil {\n\tfmt.Println(err)\n}'"]

V = ["goto_first_nonwhitespace", "extend_to_line_end"]
# D = ["ensure_selections_forward", "extend_to_line_end"]

# move line up and down
"C-j" = ["extend_to_line_bounds", "delete_selection", "paste_after"]
"C-k" = ["extend_to_line_bounds", "delete_selection", "move_line_up", "paste_before"]

# experimental
# "A-j" = [ "keep_primary_selection", "move_line_down", "extend_to_line_bounds", "extend_line_above", "split_selection_on_newline", "select_mode", "goto_line_end_newline", "normal_mode", "rotate_selection_contents_forward", "keep_primary_selection", "move_line_down" ]
# "A-k" = [ "keep_primary_selection", "extend_to_line_bounds", "extend_line_above", "split_selection_on_newline", "select_mode", "goto_line_end_newline", "normal_mode", "rotate_selection_contents_forward", "keep_primary_selection" ]
# "C-f" = [":new", ":insert-output fzf", "select_all", "split_selection_on_newline", "goto_file", "goto_last_modified_file", ":buffer-close!"]

# neovim like bindings
"G" = ["goto_last_line"]
"Z" = { Q = ":quit!" ,  Z = ":write-quit!" }
"D" = ["extend_to_line_bounds", "delete_selection"]
"0" = ["goto_line_start"]
"$" = ["goto_line_end"]
"=" = [ ":format" ]
"^" = ["goto_first_nonwhitespace"]

"C-h" = "select_prev_sibling"
"A-j" = "shrink_selection"
"A-k" = "expand_selection"
"C-l" = "select_next_sibling"

# test for project launcher
[keys.normal.space]
# x = ":sh kitty @ send-text -m 'title:^hxterm' kitty +kitten icat ~/Pictures/ \\\\n"
# t = [ ":sh kitty @ launch --type=os-window --keep-focus --title=hxterm --os-window-class=spad" ]
# c = { r = ":sh kitty @ send-text --match 'title:^Terminal' cargo run \\\\n", t = ":sh kitty @ send-text --match 'title:^Terminal' 'clear \\ncargo test \\n'" }


[keys.select]
"D" = ["extend_to_line_bounds", "delete_selection"]
"V" = "extend_to_line_end"

[keys.insert]
j = { k = "normal_mode" } # Maps `jk` to exit insert mode
C-left = "move_prev_word_start"
C-right = "move_next_word_end"
C-h = "move_prev_word_start"
C-l = "move_next_word_end"
up = "move_line_up"
down = "move_line_down"
left = "move_char_left"
right = "move_char_right"
# C-left = "move_char_left"
# C-right = "move_char_right"
