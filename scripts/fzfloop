#!/bin/bash
# (c) 2023 McUsr -- Vim Licence.
set -o pipefail
set -e
flist=()
tosee=
# https://stackoverflow.com/questions/72825051/how-to-stop-user-input-to-show-on-interactive-terminal-window
curs_off() {
  COF='\e[?25l' #Cursor Off
  printf "$COF"
}
curs_on() {
  CON='\e[?25h' #Cursor On
  printf "$CON"
}
# https://superuser.com/questions/276531/clear-stdin-before-reading
clear_stdin()
(
    old_tty_settings=`stty -g`
    stty -icanon min 0 time 0

    while read none; do :; done

    stty "$old_tty_settings"
)
trap 'stty sane ; curs_on  ; [[ -n "$tosee" ]] && echo "${flist[@]}" \
 | tr " " "\n" ; popd &>/dev/null' EXIT TERM
trap 'stty sane ; curs_on  ;  popd &>/dev/null' INT
curs_off
stty -echo
# turns off the echo
[[ $# -ne 1 && -d "$1" ]] && pushd "$1" &>/dev/null || pushd "$PWD" &>/dev/null
echo -e "Press any key to continue..." >&2
while true ; do
  tosee="$(fzf --preview='bat --color=always  {}')"
  [[ -n "$tosee" ]] && { flist+="$(realpath "$tosee")"" " ; bat "$tosee" ; }
  clear_stdin
  read -s -r -N 1 input
   if [[ "${input^^}"  == "Q" ]] ; then
      exit
   fi
 done
 stty echo
 curs_on
