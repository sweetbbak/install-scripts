#!/bin/sh
# Screenshot helper for hyprland.
# Copyright 2023, Adrian Lopez.


# CHECK WAYLAND SESSION
# ======================================
if [ -z $WAYLAND_DISPLAY ]; then
	(>&2 echo Wayland is not running)
	exit 1
fi


# PARSE CONFIG FILE
# ======================================
if [ -f ~/.config/hyprshotgun.sh ]; then
	. ~/.config/hyprshotgun.conf
fi
if [ -z $HYPRSHOTGUN_SCREENSHOTS ]; then
	HYPRSHOTGUN_SCREENSHOTS=$(xdg-user-dir PICTURES)
fi


# CONSTANTS
# ======================================
SCREENSHOT_TIMESTAMP=$(date "+${HYPRSHOTGUN_DATEFMT:-%F_%H-%M-%S_%N}")
SCREENSHOT_FULLNAME="$HYPRSHOTGUN_SCREENSHOTS"/screenshot_${SCREENSHOT_TIMESTAMP}.png


# HELPER METHODS
# ======================================
display_help(){
      GREEN='\033[32m'
      YELLOW='\033[33m'
      RED='\033[31m'
      CYAN='\033[36m'
      RESET='\033[0m'

      echo -e "$GREEN# HOW TO USE$RESET"
      echo -e ""$YELLOW"===================$RESET"
      echo -e "$RED*$RESET Local screenshot:"
      echo -e "hyprshotgun $CYAN[display|window|region|alldisplays]$RESET"
      echo "" 
      echo -e "$RED*$RESET Online screenshot:"
			echo -e "hyprshotgun $CYAN[display|window|region|alldisplays]$RESET upload"
      echo ""
      echo ""
      echo -e "$GREEN# ADVANCED SETTINGS$RESET"
      echo -e "$YELLOW===================$RESET"
      echo -e "$RED*$RESET Change the screenshot directory (optional):"
			echo 'By default, the screenshots are saved in $XDG_PICTURES_DIR. You can choose a different directory by setting the env var $HYPRSHOTGUN_SCREENSHOTS="/my/screenshot/directory/". Alternatively, you can export that same env var inside the config file ".config/.hyprshotgun.conf".'
      echo
}

take_screenshot() {
	case "$1" in
		-h|--help)
      display_help
			return 0
			;;
		display)
			grimblast save output "$2"
      ;;
		region)
      grimblast save area "$2"
			;;
		window)
      grimblast save active "$2"
			;;
		alldisplays)
      grimblast save screen "$2"
      ;;
		*)
      echo "Invalid argument:"
      echo ""
      display_help
      return 0
      ;;
	esac
}

upload_screenshot(){
  # If there is not screenshot file, then there is nothing to upload
  if [ ! -f "$SCREENSHOT_FULLNAME" ]; then exit; fi

  # Upload
  case "$1" in
    upload)
      # If curl exist, use it to upload the image to 0x0
      if type curl >/dev/null  2>&1; then
        SCREENSHOT_LOCATOR=$(curl -s -F "file=@\"$SCREENSHOT_FULLNAME\";filename=.png" 'https://0x0.st')
		  fi
      ;;
   esac
}

# We support wl-copy, xsel, and xclip.
# The first one found by order of priority will be used.
copy_to_clipboard() {
	if type wl-copy >/dev/null  2>&1; then
		if [ -z $HYPRSHOTGUN_WL_COPY_FILE ]; then
			printf "%s" "$1" | wl-copy 
		else
			wl-copy < "$SCREENSHOT_FULLNAME"
		fi
	elif type xsel >/dev/null  2>&1; then
		printf "%s" "$1" | xsel --clipboard
		unset HYPRSHOTGUN_WL_COPY_FILE
	elif type xclip &>/dev/null; then
		printf "%s" "$1" | xclip -selection clipboard
		unset HYPRSHOTGUN_WL_COPY_FILE
	else
		echo "$1"
	fi
}

# Wrapper method for notify-send
send_notification() {
	if type notify-send >/dev/null  2>&1; then
		notify-send --expire-time=3000 --category=screenshot --icon="$2" "$3" "$1"
	fi
}

# The actual notification we show
show_notification(){
  case "$1" in
    upload)
      if [ -z $SCREENSHOT_LOCATOR ]; then
        copy_to_clipboard "$SCREENSHOT_FULLNAME"
        send_notification "$SCREENSHOT_FULLNAME" document-save "ðŸ“‹ Online screenshots are not available at the moment. Image path copied:"
      else
        copy_to_clipboard "$SCREENSHOT_LOCATOR"
        send_notification "$SCREENSHOT_LOCATOR" document-send "ðŸ“‹ Image URL copied:"
      fi
      ;;
    *)
      copy_to_clipboard "$SCREENSHOT_FULLNAME"
      send_notification "$SCREENSHOT_FULLNAME" document-save "ðŸ“‹ Image path copied:"
  esac
}


# ENTRY POINT OF THE PROGRAM
# ======================================
take_screenshot "$1" "$SCREENSHOT_FULLNAME"
upload_screenshot "$2"
show_notification "$2"
