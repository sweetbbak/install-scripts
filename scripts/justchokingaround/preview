#!/usr/bin/env sh

# Add this script to $PATH. Then use this by: fzf --preview='preview {}'.
# Requirements:
# - chafa for image
# - jq for json
# - exa for directory
# - elinks for html
# - glow for markdown
# - transmission-show for torrent
# - bat for text files
# - atool for viewing zips
# - exiftool for videos and gifs
# - readelf for viewing binaries

[ "$1" = "" ] && exit 1
FIFO="/tmp/fzf_preview_fifo"

cleanup() {
    pkill ueberzugpp
    rm /tmp/ueberzugpp-*.socket 2>/dev/null
    rm -f "$FIFO"
}

if [ "$1" = "--cleanup" ]; then
    cleanup
    exit 0
fi

case "$1" in
    "--ueberzugpp")
        set -- "$2" >/dev/null
        ueberzugpp_x="125"
        ueberzugpp_y="25"
        ueberzugpp_width="80"
        ueberzugpp_height="20"
        ueberzug_image="wayland"
        image_previewer="ueberuzgpp"
        [ -p "$FIFO" ] || mkfifo "$FIFO"
        ;;
esac

start_preview() {
    echo '{"path": "'"$1"'", "action": "add", "identifier": "fzfpreview", "x": "'"$ueberzugpp_x"'", "y": "'"$ueberzugpp_y"'", "width": "'"$ueberzugpp_width"'", "height": "'"$ueberzugpp_height"'"}' >"$FIFO"
}

handle_image() {
    case "$1" in
        image/*)
            case "$image_previewer" in
                "ueberuzgpp")
                    mediainfo "$2"
                    ueberzugpp layer -o "$ueberzug_image" --silent <"$FIFO" &
                    exec 3>"${FIFO}"
                    start_preview "$2"
                    wait
                    ;;
                *)
                    chafa "$2" -f symbols
                    ;;
            esac
            ;;
        *) exiftool -All "$2" ;;
    esac
}

handle_text() {
    case "$2" in
        *.md) glow --style=auto "$2" ;;
        *.htm | *.html) elinks -dump "$2" ;;
        *) bat --theme=base16 --color=always --paging=never --number --italic-text=never --tabs=2 --wrap=never "$2" ;;
    esac
}

test -d "$HOME/.cache/fzf" || mkdir -p "$HOME/.cache/fzf"
cache="$HOME/.cache/fzf/thumbnail.$(stat --printf '%n\0%i\0%F\0%s\0%W\0%Y' -- "$(readlink -f "$1")" | sha256sum | awk '{print $1}'))"
mime="$(file --brief --mime-type "$1")"
case "$mime" in
    text/*) handle_text "$mime" "$1" ;;
    inode/directory) exa -T --icons --color=always "$1" ;;
    inode/symlink) printf "Symbolic link to: \e[34m%s\e[0m." "$(readlink "$1")" ;;
    application/json) jq --color-output <"$1" ;;
    application/x-bittorrent) transmission-show --unsorted "$1" ;;
    application/x-executable | application/x-pie-executable | application/x-sharedlib) readelf --wide --demangle=auto --all "$1" ;;
    application/zip) atool --list "$1" ;;
    application/pdf)
        pdftoppm -jpeg -f 1 -singlefile "$1" "$cache"
        handle_image "image/*" "$cache.jpg"
        ;;
    image/*)
        handle_image "$mime" "$1"
        ;;
    video/*)
        ffmpegthumbnailer -i "$1" -o "${cache}.jpg" -s 200
        handle_image "image/*" "${cache}.jpg"
        ;;
    *) exit 1 ;;
esac
